#ifndef PUBSUB_H
#define PUBSUB_H

#include <stddef.h>
#include <stdint.h>

typedef enum {
	LOOP = 0,
	SCHEDULER_1HZ,
	SCHEDULER_5HZ,
	SCHEDULER_10HZ,
	SCHEDULER_25HZ,
	SCHEDULER_50HZ,
	SCHEDULER_100HZ,
	SCHEDULER_250HZ,
	SCHEDULER_500HZ,
	SCHEDULER_1KHZ,
	SCHEDULER_2KHZ,
	SCHEDULER_4KHZ,
	SCHEDULER_8KHZ,
	SENSOR_IMU1_GYRO_UPDATE,
	SENSOR_IMU1_ACCEL_UPDATE,
	SENSOR_IMU1_CALIBRATE_GYRO,
	SENSOR_IMU1_GYRO_CALIBRATION_UPDATE,
	SENSOR_IMU2_GYRO_UPDATE,
	SENSOR_IMU2_ACCEL_UPDATE,
	SENSOR_IMU2_CALIBRATE_GYRO,
	SENSOR_IMU2_GYRO_CALIBRATION_UPDATE,
	SENSOR_COMPASS,
	SENSOR_AIR_PRESSURE,
	SENSOR_ENCODER,
	SENSOR_ACCURATE_ENCODER,
	SENSOR_ATTITUDE_VECTOR,
	SENSOR_ATTITUDE_ANGLE,
	SENSOR_LINEAR_ACCEL,
	NAV_POSITION_UPDATE,
	INTERNAL_MESSAGE,
	EXTERNAL_MESSAGE,
	COMMAND_SET_TARGET_ORIENTATION,
	COMMAND_SET_STATE,
	COMMAND_SET_MOVE_IN,
	EXTERNAL_SENSOR_OPTFLOW,
	EXTERNAL_SENSOR_GPS,
	STATE_DETECTION_UPDATE,
	SPEED_CONTROL_SETUP,
	SPEED_CONTROL_UPDATE,
	LOCAL_STORAGE_LOAD,
	LOCAL_STORAGE_RESULT,
	LOCAL_STORAGE_SAVE,
	FAULT_DETECTION,
	MONITOR_DATA,
	TOPIC_NULL
} topic_t;

typedef void (*subscriber_callback_t)(uint8_t *data, size_t size);

void publish(topic_t topic, uint8_t *data, size_t size);
void subscribe(topic_t topic, subscriber_callback_t callback);

#endif
